{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 def job_scheduling(jobs):\
    jobs = sorted(jobs, key=lambda x: x[1])\
    n = len(jobs)\
    dp = [0] * n\
    dp[0] = jobs[0][2]\
    for i in range(1, n):\
        dp[i] = max(dp[i-1], dp[binary_search(jobs, i)] + jobs[i][2])\
    return dp[n-1]\
\
def binary_search(jobs, index):\
    start, end = 0, index-1\
    while start <= end:\
        mid = (start + end) // 2\
        if jobs[mid][1] <= jobs[index][0]:\
            if jobs[mid+1][1] <= jobs[index][0]:\
                start = mid + 1\
            else:\
                return mid\
        else:\
            end = mid - 1\
    return 0\
num_jobs = int(input("Enter the number of jobs: "))\
jobs = []\
for i in range(num_jobs):\
    start = int(input("Enter the start time of job " + str(i+1) + ": "))\
    end = int(input("Enter the end time of job " + str(i+1) + ": "))\
    profit = int(input("Enter the profit of job " + str(i+1) + ": "))\
    jobs.append((start, end, profit))\
max_profit = job_scheduling(jobs)\
print("Maximum profit:", max_profit)}